version: 0.2

phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REPO
  build:
    commands:
      - echo Building the Docker image...
      - docker build -t shark-website .
      - docker tag shark-website:latest $ECR_REPO:$ENVIRONMENT
  post_build:
    commands:
      - echo Pushing the Docker image to ECR...
      - docker push $ECR_REPO:$ENVIRONMENT
      - echo Preparing deployment artifacts...
      - mkdir -p scripts
      - |
        cat << EOF > scripts/pull_image.sh
        #!/bin/bash
        aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REPO
        docker pull $ECR_REPO:$ENVIRONMENT
        EOF
      - |
        cat << EOF > scripts/start_service.sh
        #!/bin/bash
        docker stop shark-website || true
        docker rm shark-website || true
        docker run -d \
          --name shark-website \
          --user node \
          -p 80:8080 \
          -v /home/ec2-user/app-logs:/home/node/app/logs \
          --restart unless-stopped \
          $ECR_REPO:$ENVIRONMENT
        EOF
      - chmod +x scripts/pull_image.sh scripts/start_service.sh

artifacts:
  files:
    - appspec.yml
    - scripts/**
  discard-paths: no